{
	// Place your snippets for javascript here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Javascript Comment": {
		"prefix": "jscomment",
		"body": [
			"/* ",
			" * $1",
			"*/"
		],
		"description": "Javascript comment"
	},
	"D3.js Select": {
		"prefix": "d3js-select",
		"body": [
			"d3.select(${1:css-selector});",
		],
		"description": "D3.JS select()"
	},
	"D3.js Select All": {
		"prefix": "d3js-selectAll",
		"body": [
			"d3.selectAll(${1:css-selector});",
		],
		"description": "D3.JS selectAll()"
	},
	"D3.js Dom manipulations": {
		"prefix": "d3js-dom-manipulation",
		"body": [
			"${1:d3.text(${2:content});  //Gets or sets the text of the selected element}",
			"${3:d3.text(${4:content});  //}",
			"${5:d3.text(${6:content});  //}",
			"${7:d3.text(${8:content});  //}",
			"${9:d3.text(${10:content});  //}",
		],
		"description": "D3.JS selectAll()"
	},
	"D3.js Event handling": {
		"prefix": "d3js-event-handlers",
		"body": [
			"/*",
			"https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events",
			"var divobj = d3.selectAll('div');",
			"divobj.on('mouseover', function() {",
			"    divobj.style('background-color', 'orange');",
			"    divobj.text('On mouse over');",
			"}).on('click', function() {",
			"    divobj.text('Clicked!');",
			"}).on('mouseout', function() {",
			"    divobj.style('background-color', 'steelblue');",
			"    divobj.text('Onmouse out');",
			"});",
            "*/"
		],
		"description": "D3.JS selectAll()"
	},
	"D3.js Loading CSV Data": {
		"prefix": "d3js-csv-load-data",
		"body": [
			"/*",
			"d3.csv('/data/jira_samples.csv', function(d) {",
            "    return {",
            "        id: d.issue,",
            "        summary: d.summary,",
            "        priority: d.priority,",
            "        status: d.status,",
            "        storypoints: d.storypoints",
            "    };",
            "}).then(function(data) {",
			"    console.log(data[0]);",
			"    for (var i = 0; i < data.length; i++) {",
			"	     console.log('Issue: ' + data[i].id + ', Summary: ' + data[i].summary);",
			"    }",
            "});",
            "*/"
		],
		"description": "D3.JS CSV Load data"
	},
	"Chart.js line chart": {
		"prefix": "chartjs-line",
		"body": [
			"var ctx = document.getElementById('${1:myChart}').getContext('2d');",
			"var chart = new Chart(ctx, {",
			"    // The type of chart we want to create",
			"    type: 'line',",
			"",
			"    // The data for our dataset",
			"    data: {",
			"        labels: [${2:list of labels}],",
			"        datasets: [{",
			"            label: '${3:My dataset}',",
			"            backgroundColor: '${4:rgba(255, 99, 132, 0.75)}',",
			"            borderColor: '${5:rgba(255, 99, 132. 1.0)}',",
			"            data: ${6:[0, 10, 5, 2, 20, 30, 45]}",
			"        }]",
			"    },",
			"",
			"    // Configuration options go here",
			"    options: {}",
			"});",
		],
		"description": "chart.js line chart"
	},


}