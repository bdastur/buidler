/*
 * Gird layout.
 * display: grid.
 */
 .grid-layout-1 {
    display: grid;
    grid-auto-rows: minmax(20px, auto);
    grid-gap: 5px;
}

/***********************************************************
 * grid-layout c<n> for <n> columns.
 * Usage "class: grid-layout-1 c<n>"
 ***********************************************************/
.grid-layout-1.c3 {
    grid-template-columns: repeat(3, 1fr);
}

 .grid-layout-1.c4 {
    grid-template-columns: repeat(4, 1fr);
}

 .grid-layout-1.c5 {
    grid-template-columns: repeat(5, 1fr);
}

 .grid-layout-1.c6 {
    grid-template-columns: repeat(6, 1fr);
}

.grid-layout-1.c7 {
    grid-template-columns: repeat(7, 1fr);
}

.grid-layout-1.c8 {
    grid-template-columns: repeat(8, 1fr);
}

.grid-layout-1.c9 {
    grid-template-columns: repeat(9, 1fr);
}

.grid-layout-1.c10 {
    grid-template-columns: repeat(10, 1fr);
}

/*********************************************************
* grid-layout no gap.
* Usage "class grid-layout-1 gap-none
**********************************************************/
.grid-layout-1.gap-none {
    grid-gap: 0px;
}

.grid-layout-1.gap-5px {
    grid-gap: 5px;
}

.grid-layout-1.gap-10px {
    grid-gap: 10px;
}


.fixed-row-height {
	height: 100px;
}


/*************************************************************
 * gelem  c<x>c<y>, where x = start, y = end (columns)
 * ----------------------------------------------------------
 * NOTE: 
 * This section of the file can be generated by running
 * '/builderutils/render_layout_css.py 10 5'
 * Usage:
 * $ ./builderutils/render_layout_css.py 
 *   Usage: render_layout_csss.py <column count>  <row count>
 *************************************************************/
 .gelem.c1c2 {
    grid-column: 1 / 2;
}

.gelem.c1c3 {
    grid-column: 1 / 3;
}

.gelem.c1c4 {
    grid-column: 1 / 4;
}

.gelem.c1c5 {
    grid-column: 1 / 5;
}

.gelem.c1c6 {
    grid-column: 1 / 6;
}

.gelem.c1c7 {
    grid-column: 1 / 7;
}

.gelem.c1c8 {
    grid-column: 1 / 8;
}

.gelem.c1c9 {
    grid-column: 1 / 9;
}

.gelem.c1c10 {
    grid-column: 1 / 10;
}

.gelem.c2c3 {
    grid-column: 2 / 3;
}

.gelem.c2c4 {
    grid-column: 2 / 4;
}

.gelem.c2c5 {
    grid-column: 2 / 5;
}

.gelem.c2c6 {
    grid-column: 2 / 6;
}

.gelem.c2c7 {
    grid-column: 2 / 7;
}

.gelem.c2c8 {
    grid-column: 2 / 8;
}

.gelem.c2c9 {
    grid-column: 2 / 9;
}

.gelem.c2c10 {
    grid-column: 2 / 10;
}

.gelem.c3c4 {
    grid-column: 3 / 4;
}

.gelem.c3c5 {
    grid-column: 3 / 5;
}

.gelem.c3c6 {
    grid-column: 3 / 6;
}

.gelem.c3c7 {
    grid-column: 3 / 7;
}

.gelem.c3c8 {
    grid-column: 3 / 8;
}

.gelem.c3c9 {
    grid-column: 3 / 9;
}

.gelem.c3c10 {
    grid-column: 3 / 10;
}

.gelem.c4c5 {
    grid-column: 4 / 5;
}

.gelem.c4c6 {
    grid-column: 4 / 6;
}

.gelem.c4c7 {
    grid-column: 4 / 7;
}

.gelem.c4c8 {
    grid-column: 4 / 8;
}

.gelem.c4c9 {
    grid-column: 4 / 9;
}

.gelem.c4c10 {
    grid-column: 4 / 10;
}

.gelem.c5c6 {
    grid-column: 5 / 6;
}

.gelem.c5c7 {
    grid-column: 5 / 7;
}

.gelem.c5c8 {
    grid-column: 5 / 8;
}

.gelem.c5c9 {
    grid-column: 5 / 9;
}

.gelem.c5c10 {
    grid-column: 5 / 10;
}

.gelem.c6c7 {
    grid-column: 6 / 7;
}

.gelem.c6c8 {
    grid-column: 6 / 8;
}

.gelem.c6c9 {
    grid-column: 6 / 9;
}

.gelem.c6c10 {
    grid-column: 6 / 10;
}

.gelem.c7c8 {
    grid-column: 7 / 8;
}

.gelem.c7c9 {
    grid-column: 7 / 9;
}

.gelem.c7c10 {
    grid-column: 7 / 10;
}

.gelem.c8c9 {
    grid-column: 8 / 9;
}

.gelem.c8c10 {
    grid-column: 8 / 10;
}

.gelem.c9c10 {
    grid-column: 9 / 10;
}

.gelem.r1r2 {
    grid-row: 1 / 2;
}

.gelem.r1r3 {
    grid-row: 1 / 3;
}

.gelem.r1r4 {
    grid-row: 1 / 4;
}

.gelem.r1r5 {
    grid-row: 1 / 5;
}

.gelem.r2r3 {
    grid-row: 2 / 3;
}

.gelem.r2r4 {
    grid-row: 2 / 4;
}

.gelem.r2r5 {
    grid-row: 2 / 5;
}

.gelem.r3r4 {
    grid-row: 3 / 4;
}

.gelem.r3r5 {
    grid-row: 3 / 5;
}

.gelem.r4r5 {
    grid-row: 4 / 5;
}


